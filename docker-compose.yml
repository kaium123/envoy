version: '3'

services:
  sm-db:
    container_name: sm-db
    image: kaium123/sm-db
    ports:
      - "54321:5432"

    volumes:
      - sm-db:/var/lib/postgresql
    environment:
      POSTGRES_DB: testdb
      POSTGRES_PASSWORD: 12345678
    networks:
      - mygrpcnetwork
    restart: unless-stopped

  grpc-service:
    container_name: grpc-service
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    networks:
      - mygrpcnetwork
    depends_on:
      - sm-db
    restart: unless-stopped
    env_file:
      - base.env
    

  envoy-proxy:
    build:
      context: .
      dockerfile: Dockerfile.envoy
    container_name: envoy_container
    volumes:
      - ./envoy.yaml:/etc/envoy/envoy.yaml
    ports:
      - "8081:8081"
      - "8085:8085"
    depends_on:
      - grpc-service
    networks:
      - mygrpcnetwork

  kong:
    image: kong
    container_name: kong_container
    environment:
        - KONG_DATABASE=off
        - KONG_DECLARATIVE_CONFIG=/home/kong/config.yml
        - KONG_PROXY_LISTEN=0.0.0.0:8000
        - KONG_ADMIN_LISTEN=0.0.0.0:8001
        - KONG_LOG_LEVEL=debug
        - KONG_PROXY_ACCESS_LOG=/dev/stdout
        - KONG_ADMIN_ACCESS_LOG=/dev/stdout
        - KONG_PROXY_ERROR_LOG=/dev/stderr
        - KONG_ADMIN_ERROR_LOG=/dev/stderr
        - AUTH_URL=auth
        - AUTH_PORT=8089
        - ECHO_URL=echo
    volumes:
        - ./kong-template.yml:/home/kong/config.yml:Z
    ports:
        - '8000:8000'
        - '8001:8001'
        - '8443:8443'
        - '8444:8444'
    networks:
      - mygrpcnetwork
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10

  echo:
    image: ealen/echo-server
    container_name: echo
    networks:
      - mygrpcnetwork

  auth:
    container_name: auth
    image: kaium123/auth:2
    ports:
      - "8089:8089"
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    networks:
      - mygrpcnetwork
    depends_on:
      - sm-db
      - redis
    restart: unless-stopped
    env_file:
      - base.env

  

  redis:
    container_name: redis
    image: 'redis:7-alpine'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_PORT_NUMBER=6379
    networks:
      - mygrpcnetwork
    ports:
      - '63792:6379'

networks:
  mygrpcnetwork:
    driver: bridge


volumes:
  sm-db: {}
